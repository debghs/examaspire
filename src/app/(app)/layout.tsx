import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Nav from '@/globals/Nav/Component'
import { getPayload } from 'payload'
import configPromise from '@payload-config'
import { getServerSideURL } from '@/utilities/getURL'
import { unstable_cache } from 'next/cache'
import type { Config } from 'src/payload-types'
import { getCachedGlobal } from '@/utilities/getGlobals'

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type NavGlobal = Config['globals']['nav']
type NavItem = NonNullable<NavGlobal['navItems']>[number]
type SubNavItem = NonNullable<NavItem['subNavItems']>[number]

interface ProcessedNavData {
  logo: string | null
  navItems: Array<{
    id: string
    label: string
    link: string
    newTab: boolean
    subNavItems: Array<{
      id: string
      label: string
      link: string
      newTab: boolean
    }>
  }>
}

const processNavData = (navData: NavGlobal): ProcessedNavData => {
  const logo = (typeof navData?.logo !== 'number' && navData?.logo?.url) || null

  const navItems = (navData?.navItems || []).map((item: NavItem) => ({
    ...item,
    id: item.id ?? '',
    newTab: item.newTab ?? false,
    subNavItems: item.subNavItems
      ? item.subNavItems
          .filter((subItem): subItem is SubNavItem => subItem !== null)
          .map((subItem: SubNavItem) => ({
            ...subItem,
            id: subItem.id ?? '',
            newTab: subItem.newTab ?? false,
          }))
      : [],
  }))

  return { logo, navItems }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const navData = await getCachedGlobal('nav')()
  const { logo, navItems } = processNavData(navData)

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Nav navItems={navItems} logo={logo} />
        {children}
      </body>      
    </html>
  );
}
